There are many ways to structure an extension project; 
however, the only prerequisite is to place the manifest.json file 
in the extension's root directory as in following example:

my-extension/
│
├── manifest.json
├── background.js
├── scripts/
│   ├── content.js
│   ├── react.production.min.js
├── popup/
│   ├── popup.html
│   ├── popup.js
│   ├── popup.css
└── images/
    ├── icon-16.png
    ├── icon-32.png
    ├── icon-48.png
    ├── icon-128.png


manifest.json file in the root of the project

The "matches" field can have one or more match patterns. 
These allow the browser to identify which sites to inject the content scripts into. 
Match patterns consist of three parts: <scheme>://<host><path>. They can contain '*' characters.

The Document Object Model (DOM) connects web pages to scripts or programming languages 
by representing the structure of a document—such as the HTML representing a web page—in memory. 
Usually it refers to JavaScript, even though modeling HTML, SVG, or XML documents as objects are 
not part of the core JavaScript language.

The DOM represents a document with a logical tree. Each branch of the tree ends in a node, 
and each node contains objects. DOM methods allow programmatic access to the tree. With them, 
you can change the document's structure, style, or content.